[tool.poetry]
name = "model_explore"
version = "0.0.1"
description = "Model architecture exploration for cryoET particle picking"
authors = ["CZII autonomous 3d particle picking team"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
requests = "^2.25.1"
torch = { version = "*", source = "https://download.pytorch.org/whl/cu118", allow-prereleases = true }
matplotlib = "^3.4.3"
tqdm = "4.66.5"
zarr = "2.18.3"
copick = "^0.5.6"
#s3fs = "^2024.9.0"
click = "^8.1.7"
nibabel = "5.2.1"
mlflow = "2.17.0"
pytorch-lightning = "2.4.0"
optuna = "4.0.0"
optuna-integration = { version = "*", extras = ["pytorch_lightning"] }
python-dotenv = "*"
monai-weekly = { version = "1.4.dev2440", allow-prereleases = true }
copick-utils = {git = "https://github.com/copick/copick-utils.git", branch = "main"}
multiprocess = "*"

[tool.poetry.dev-dependencies]
pytest = "^6.2.3"
black = "^24.8.0"
pre-commit = "^3.8.0"
ruff = "^0.6.4"

[tool.poetry.scripts]
create-targets = "model_explore.pytorch.entry_points.run_create_targets:cli"
train-model = "model_explore.pytorch.entry_points.run_train:cli"
model-explore = "model_explore.pytorch.entry_points.run_optuna:cli"
inference = "model_explore.pytorch.entry_points.run_segment_predict:cli"
localize = "model_explore.pytorch.entry_points.run_localize:cli"
extract-membrane-picks = "model_explore.pytorch.entry_points.run_extract_mb_picks:cli"
evaluate = "model_explore.pytorch.entry_points.run_evaluate:cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
